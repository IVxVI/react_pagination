{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pagesQuantity","Math","ceil","firstPageCheck","lastPageCheck","prevPage","nextPage","pages","handlePageChange","page","className","classNames","disabled","href","onClick","map","active","items","App","useState","setPerPage","setCurrentPage","totalPages","lastInRow","min","firstInRow","id","onChange","event","target","value","htmlFor","slice","item","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCGIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAgBJ,EAAQC,IAAY,EACtCD,EAAQC,EACRI,KAAKC,KAAKN,EAAQC,GAEhBM,EAAiC,IAAhBL,EACjBM,EAAgBN,IAAgBE,EAChCK,EAAWP,EAAc,EACzBQ,EAAWR,EAAc,EAEzBS,EAAQlB,EAAW,EAAGW,GAEtBQ,EAAmB,SAACC,GACpBA,EAAO,GAAKA,EAAOT,GAIvBD,EAAaU,IAGf,OACE,mCACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UACFC,IAAW,YAAa,CAAEC,SAAUT,IADtC,SAIE,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAI,WAAMR,GACVS,QAAS,kBAAMN,EAAiBH,IAChC,gBAAeF,EALjB,oBAUDI,EAAMQ,KAAI,SAAAN,GAAI,OACb,oBAEEC,UACEC,IAAW,YAAa,CAAEK,OAAQlB,IAAgBW,IAHtD,SAME,mBACE,UAAQ,WACRC,UAAU,YACVI,QAAS,kBAAMN,EAAiBC,IAChCI,KAAI,WAAMJ,GAJZ,SAMGA,KAXEA,MAgBT,oBAAIC,UACFC,IAAW,YAAa,CAAEC,SAAUR,IADtC,SAIE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAI,WAAMP,GACVQ,QAAS,kBAAMN,EAAiBF,IAChC,gBAAeF,EALjB,0BCpEJa,EAAQ5B,EAAW,EAAG,IAAI0B,KAAI,SAAAtB,GAAC,qBAAYA,MAEpCyB,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOtB,EAAP,KAAgBuB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOrB,EAAP,KAAoBuB,EAApB,KACA,EAAqBF,mBAAS,IAAvBG,EAAP,oBAEMC,EAAYtB,KAAKuB,IAAI1B,EAAcD,EAASyB,GAC5CG,GAAc3B,EAAc,GAAKD,EAAU,EAMjD,OACE,sBAAKa,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWZ,EADX,mBACiC2B,EADjC,cACiDF,EADjD,eACiED,EADjE,OAIA,sBAAKZ,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRgB,GAAG,kBACHhB,UAAU,eACViB,SAAU,SAACC,GACTR,GAAYQ,EAAMC,OAAOC,OACzBT,EAAe,IANnB,SAUG,CAAC,EAAG,EAAG,GAAI,IAAIN,KAAI,SAAAe,GAAK,OACvB,wBAAQA,MAAOA,EAAf,SAAuBA,WAK7B,uBAAOC,QAAQ,kBAAkBrB,UAAU,qBAA3C,mBACMb,EADN,kBAKF,cAAC,EAAD,CACED,MAAO0B,EACPzB,QAASA,EACTC,YAAaA,EACbC,aAvCmB,SAACU,GACxBY,EAAeZ,MAyCb,6BACGQ,EAAMe,MAAMP,EAAa,EAAGF,GAAWR,KAAI,SAAAkB,GAAI,OAC9C,oBAAI,UAAQ,OAAZ,SAAoBA,aCzD9BC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.28d9d7d0.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pagesQuantity = total % perPage === 0\n    ? total / perPage\n    : Math.ceil(total / perPage);\n\n  const firstPageCheck = currentPage === 1;\n  const lastPageCheck = currentPage === pagesQuantity;\n  const prevPage = currentPage - 1;\n  const nextPage = currentPage + 1;\n\n  const pages = getNumbers(1, pagesQuantity);\n\n  const handlePageChange = (page: number) => {\n    if (page < 1 || page > pagesQuantity) {\n      return;\n    }\n\n    onPageChange(page);\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={\n          classNames('page-item', { disabled: firstPageCheck })\n        }\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href={`#${prevPage}`}\n            onClick={() => handlePageChange(prevPage)}\n            aria-disabled={firstPageCheck}\n          >\n            «\n          </a>\n        </li>\n        {pages.map(page => (\n          <li\n            key={page}\n            className={\n              classNames('page-item', { active: currentPage === page })\n            }\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              onClick={() => handlePageChange(page)}\n              href={`#${page}`}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n\n        <li className={\n          classNames('page-item', { disabled: lastPageCheck })\n        }\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href={`#${nextPage}`}\n            onClick={() => handlePageChange(nextPage)}\n            aria-disabled={lastPageCheck}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages] = useState(42);\n\n  const lastInRow = Math.min(currentPage * perPage, totalPages);\n  const firstInRow = (currentPage - 1) * perPage + 1;\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstInRow} - ${lastInRow} of ${totalPages})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={(event) => {\n              setPerPage(+event.target.value);\n              setCurrentPage(1);\n            }}\n          >\n\n            {[5, 3, 10, 20].map(value => (\n              <option value={value}>{value}</option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          {`${perPage} per page`}\n        </label>\n      </div>\n\n      <Pagination\n        total={totalPages}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n\n      <ul>\n        {items.slice(firstInRow - 1, lastInRow).map(item => (\n          <li data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}